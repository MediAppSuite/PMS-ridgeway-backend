// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnitOfWorkDemo.Infrastructure;

#nullable disable

namespace PMS.Infrastructure.Migrations
{
    [DbContext(typeof(DbContextClass))]
    [Migration("20231221090427_change ward to string")]
    partial class changewardtostring
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PMS.Core.Models.DTO.GetPatientStatisticsDto", b =>
                {
                    b.Property<int>("ActivePatients")
                        .HasColumnType("int");

                    b.Property<int>("NewPatientsThisWeek")
                        .HasColumnType("int");

                    b.Property<int>("NewPatientsToday")
                        .HasColumnType("int");

                    b.Property<int>("TotalPatients")
                        .HasColumnType("int");

                    b.ToTable("GetPatientStatisticsDto");
                });

            modelBuilder.Entity("PMS.Core.Models.PatientMedicalRecordDetails", b =>
                {
                    b.Property<int>("PatientMedicalRecordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientMedicalRecordID"), 1L, 1);

                    b.Property<DateTime?>("AdmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BHTNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Background")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DailyStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fiepath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientProfileID")
                        .HasColumnType("int");

                    b.Property<string>("Plan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReasonID")
                        .HasColumnType("bigint");

                    b.Property<string>("SpecialRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Treatments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientMedicalRecordID");

                    b.HasIndex("PatientProfileID");

                    b.HasIndex("ReasonID");

                    b.ToTable("PatientRecord");
                });

            modelBuilder.Entity("PMS.Core.Models.Reason", b =>
                {
                    b.Property<long>("ReasonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ReasonID"), 1L, 1);

                    b.Property<string>("ReasonDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReasonID");

                    b.ToTable("Reasons");
                });

            modelBuilder.Entity("PMS.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UnitOfWorkDemo.Core.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Allergic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmergencyContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("insuranceInfomation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("PMS.Core.Models.PatientMedicalRecordDetails", b =>
                {
                    b.HasOne("UnitOfWorkDemo.Core.Models.Patient", "PatientProfile")
                        .WithMany("PatientMedicalRecordDetails")
                        .HasForeignKey("PatientProfileID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PMS.Core.Models.Reason", "Reason")
                        .WithMany()
                        .HasForeignKey("ReasonID");

                    b.Navigation("PatientProfile");

                    b.Navigation("Reason");
                });

            modelBuilder.Entity("UnitOfWorkDemo.Core.Models.Patient", b =>
                {
                    b.Navigation("PatientMedicalRecordDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
